<?xml version = "1.0"?>
<root>
  <conditions>
    <condition>
      <code>1==1</code>
      <value>True</value>
    </condition>
    <condition>
      <code>1==0</code>
      <value>False</value>
    </condition>
    <condition>
      <code>1==0</code>
      <value>False</value>
    </condition>
  </conditions>

  <complexities>
    <!-- Conditional branching -->
    <conditionals>
      <!-- if statements-->
      <if>
        <code>if(#condition#){</code>
          <code>#placeholder#</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>#placeholder#</code>
        <code>}else{</code>
        <code>{}</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>{}</code>
        <code>}else{</code>
        <code>#placeholder#</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>#placeholder#</code>
        <code>}else if(!#condition#){</code>
        <code>{}</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>{}</code>
        <code>}else if(!#condition#){</code>
        <code>#placeholder#</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>#placeholder#</code>
        <code>}else if(!#condition#){</code>
        <code>{}</code>
        <code>}else{</code>
        <code>{}</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>{}</code>
        <code>}else if(!#condition#){</code>
        <code>#placeholder#</code>
        <code>}else{</code>
        <code>{}</code>
        <code>}</code>
      </if>
      <if>
        <code>if(#condition#){</code>
        <code>{}</code>
        <code>}else if(!#condition#){</code>
        <code>{}</code>
        <code>}else{</code>
        <code>#placeholder#</code>
        <code>}</code>
      </if>

      <!-- Switch cases  -->
      <switch>
        <code>switch(#condition#){</code>
        <code>case(#condition#):</code>
        <code>#placeholder#</code>
        <code>break;</code>
        <code>default:</code>
        <code>break;</code>
        <code>}</code>
      </switch>

    </conditionals>

    <!--Conditional and unconditional loops -->
    <loops>
      <while>
        <code>while(#condition#){</code>
        <code>#placeholder#</code>
        <code>}</code>
      </while>
      <do_while>
        <code>do{</code>
        <code>#placeholder#</code>
        <code>}while(#condition#);</code>
      </do_while>
      <for>
        <code>for(int i = 0; i <= 10; i++){</code>
        <code>#placeholder#</code>
        <code>}</code>
      </for>
      <foreach>
        <code>string[] arr = new string[4]; // declaring array<code>
        <code></code>
        <code>//Storing value in array element</code>
        <code>arr[0] = null;</code>
        <code>arr[1] = null;</code>
        <code>arr[2] = null;</code>
        <code>arr[3] = tainted;</code>
        <code></code>
        <code>foreach(string val in arr){</code>
        <code>#tainted# = val;</code>
        <code>#placeholder#</code>
        <code>}</code>
      </foreach>
      <goto>
        <code>goto Skip;</code>
        <code>#placeholder#</code>
        <code>Skip:</code>
        <code>{}</code>
      </goto>
      <goto>
        <code>goto Skip;</code>
        <code>Skip:</code>
        <code>#placeholder#</code>
      </goto>
    </loops>
  </complexities>
</root>
