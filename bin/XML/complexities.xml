<?xml version = "1.0"?>
<root>
    <conditions>
        <condition>
            <code>1==1</code>
            <value>True</value>
        </condition>
        <condition>
            <code>1==0</code>
            <value>False</value>
        </condition>
        <!-- TODO add other conditions-->
    </conditions>

    <complexities>
        <!-- Conditional branching -->
        <conditionals>
            <!-- if statements-->
            <if>
                <code>
                    if(#condition#){
                        #placeholder#
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        #placeholder#
                    }else{
                        {}
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        {}
                    }else{
                        #placeholder#
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        #placeholder#
                    }else if(!#condition#){
                        {}
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        {}
                    }else if(!#condition#){
                        #placeholder#
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        #placeholder#
                    }else if(!#condition#){
                        {}
                    }else{
                        {}
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        {}
                    }else if(!#condition#){
                        #placeholder#
                    }else{
                        {}
                    }
                </code>
            </if>
            <if>
                <code>
                    if(#condition#){
                        {}
                    }else if(!#condition#){
                        {}
                    }else{
                        #placeholder#
                    }
                </code>
            </if>

            <!-- Switch cases  -->
            <switch>
                <code>
                    switch(#condition#){

                        case(#condition#):
                            #placeholder#
                            break;

                        default:
                            break;
                    }
                </code>
            </switch>

            <!-- Ternary operators -->
            <ternary>
                <code>#condition# ? #placeholder# : {}</code>
            </ternary>
            <ternary>
                <code>#condition# ? {} : #placeholder#</code>
            </ternary>
        </conditionals>

        <!--Conditional and unconditional loops -->
        <loops>
            <while>
                <code>
                    while(#condition#){
                        #placeholder#
                    }
                </code>
            </while>
            <do_while>
                <code>
                    do{
                        #placeholder#
                    }while(#condition#);
                </code>
            </do_while>
            <for>
                <code>
                    for(int i = 0; i &lt;= 10; i++){
                        #placeholder#
                    }
                </code>
            </for>
            <foreach>
                <code>
                    string[] arr = new string[4]; // declaring array

                    //Storing value in array element
                    arr[0] = null;
                    arr[1] = null;
                    arr[2] = null;
                    arr[3] = tainted;

                    foreach(string val in arr){
                        #tainted# = val;
                        #placeholder#
                    }
                </code>
            </foreach>

            <!-- Unconditional jumps -->
            <goto>
                <code>
                    goto Skip;
                    #placeholder#
                    Skip:
                    {}
                </code>
            </goto>
            <goto>
                <code>
                    goto Skip;
                    Skip:
                    #placeholder#
                </code>
            </goto>
        </loops>

        <!-- Functions -->
        <functions>
            <function>
                <imports>#placeholder#</imports>
                <functionName>#placeholder#</functionName>
                <returnType>#placeholder#</returnType>
                <visibility>#placeholder#</visibility>
                <args>#placeholder#</args>
                <code>
                    #visibility# #returnType# #functionName#(#args#){
                        #placeholder#
                    }
                </code>
                <call>#functionName#(#args#)</call>
            </function>
        </functions>

        <!-- Classes -->
        <classes>
            <class>
                <imports>#placeholder#</imports>
                <className>#placeholder#</className>
                <classAttributes>#placeholder#</classAttributes>
                <code>
                    class #className#{

                        #classAttributes#

                        public #className#(){} //constructor

                        #functions#
                    }
                </code>
            </class>
        </classes>
    </complexities>
</root>
