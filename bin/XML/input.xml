<?xml version="1.0"?>
<!DOCTYPE input [
<!ELEMENT input (sample+)>
<!ELEMENT sample (path, comment, imports, safe, code, input_type, output_type)>
<!ELEMENT path (dir+)>
<!ELEMENT dir (#PCDATA)>
<!ELEMENT comment (#PCDATA)>
<!ELEMENT imports (import*)>
<!ELEMENT import (#PCDATA)>
<!ELEMENT safe (#PCDATA)>
<!ELEMENT code (#PCDATA)>
<!ELEMENT input_type (#PCDATA)>
<!ELEMENT output_type (#PCDATA)>
]>
    <input>
        <sample>
            <path>
                <dir>shell_commands</dir>
            </path>
            <comment>input : shell commands</comment>
            <imports>
                <import>System</import>
                <import>System.IO</import>
                <import>System.Diagnostics</import>
            </imports>
            <safe>0</safe>
            <code>
                Process process = new Process();
                process.StartInfo.FileName = "/bin/bash";
                process.StartInfo.Arguments = "-c 'cat /tmp/tainted.txt'";
                process.StartInfo.UseShellExecute = false;
                process.StartInfo.RedirectStandardOutput = true;
                process.Start();

                String tainted;
                using(StreamReader reader = process.StandardOutput) {
                    tainted = reader.ReadToEnd();
                    process.WaitForExit();
                    process.Close();
                }
            </code>
            <input_type>file : /tmp/tainted.txt</input_type>
            <output_type>string</output_type>
        </sample>

        <sample>
            <path>
                <dir>readline</dir>
            </path>
            <comment>input : direct user input</comment>
            <imports>
                <import>System</import>
            </imports>
            <safe>0</safe>
            <code>
                string tainted = Console.ReadLine();
            </code>
            <input_type>input : get user input in tainted</input_type>
            <output_type>string</output_type>
        </sample>
    </input>
